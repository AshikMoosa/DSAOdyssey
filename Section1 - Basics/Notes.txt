#Basic Input and Output - JS

Input 
-window.prompt() - prompt(text, defaultText) - let person = prompt("Please enter your name", "Harry Potter");
-If the user clicks "OK", the input value is returned. Otherwise null is returned.

Output 
-console.log(), document.write(), window.alert(), innerHTML
-the window object is the global scope object. Hence window keyword is optional.
-JavaScript does not have any print object or print methods.
-You cannot access output devices from JavaScript.

#Basic Input and Output - Java

Input 
-import java.util.Scanner;
-Scanner input = new Scanner(System.in);
-int number = input.nextInt();
-float myFloat = input.nextFloat();
-double myDouble = input.nextDouble();
-String myString = input.next();

-In order to use the object of Scanner, we need to import java.util.Scanner package.
-we can use nextLong(), nextFloat(), nextDouble(), and next() methods to get long, float, double, and string input  

Output 
-System.out.println() , System.out.print(), System.out.printf();
-printf() -  may take multiple arguments. This is used to format the output in Java. 
-System.out.printf("Formatted with" + " precision: PI = %.2f\n", Math.PI);

----------------------------------------------------------------------------------------------
#DataTypes - JS
JavaScript has 8 Datatypes
-String
-Number
-Bigint
-Boolean
-Undefined
-Null
-Symbol
-Object

#DataTypes - Java
Java has 2 Groups of Datatypes
-Primitive data types - includes byte, short, int, long, float, double, boolean and char
-Non-primitive data types - such as String, Arrays and Classes 

-The main difference between primitive and non-primitive data types are:

-Primitive types are predefined (already defined) in Java. Non-primitive types are created by the programmer and is not defined by Java (except for String).
-Non-primitive types can be used to call methods to perform certain operations, while primitive types cannot.
-A primitive type has always a value, while non-primitive types can be null.
-A primitive type starts with a lowercase letter, while non-primitive types starts with an uppercase letter.
-The size of a primitive type depends on the data type, while non-primitive types have all the same size.

----------------------------------------------------------------------------------------------
#Arrays - Js
-const cars = ["Saab", "Volvo", "BMW"];
-const cars = [];
-const cars = new Array("Saab", "Volvo", "BMW");

#Arrays - Java
-String[] cars = {"Volvo", "BMW", "Ford", "Mazda"};
-String[] cars;
-String cars[];
-int[] myNum = {10, 20, 30, 40};
-int myNum[] = {10, 20, 30, 40};
-int a[]=new int[5];

----------------------------------------------------------------------------------------------